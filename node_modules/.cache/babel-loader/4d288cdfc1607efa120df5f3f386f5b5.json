{"ast":null,"code":"import { LOGIN_FAILED, LOGIN_REQUESTING, LOGIN_SUCCESS, LOGOUT } from \"../constants/userConstants\";\nexport const loginAction = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: LOGIN_REQUESTING\n      }); // If Login success\n\n      setTimeout(() => {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            id: 1,\n            username: \"demo user name\"\n          }\n        });\n      }, 1000);\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAILED,\n        payload: error\n      });\n    }\n  };\n};\nexport const logoutAction = () => {\n  return async dispatch => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/antam-ecommerc/src/core/redux/actions/userActions.js"],"names":["LOGIN_FAILED","LOGIN_REQUESTING","LOGIN_SUCCESS","LOGOUT","loginAction","dispatch","type","setTimeout","payload","id","username","error","logoutAction"],"mappings":"AAAA,SACEA,YADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,MAJF,QAKO,4BALP;AAOA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL;AADC,OAAD,CAAR,CADE,CAKF;;AACAM,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEJ,aADC;AAEPM,UAAAA,OAAO,EAAE;AACPC,YAAAA,EAAE,EAAE,CADG;AAEPC,YAAAA,QAAQ,EAAE;AAFH;AAFF,SAAD,CAAR;AAOD,OARS,EAQP,IARO,CAAV;AASD,KAfD,CAeE,OAAOC,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,YADC;AAEPQ,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AACF,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,MAAOP,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD,GAJD;AAKD,CANM","sourcesContent":["import {\r\n  LOGIN_FAILED,\r\n  LOGIN_REQUESTING,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const loginAction = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: LOGIN_REQUESTING,\r\n      });\r\n\r\n      // If Login success\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: {\r\n            id: 1,\r\n            username: \"demo user name\",\r\n          },\r\n        });\r\n      }, 1000);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: error,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}